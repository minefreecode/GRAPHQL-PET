package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"
	"graphql-pet/controller"
	"graphql-pet/graph/model"
)

// CreateTaskListing это разрешитель для создания тасков
func (r *mutationResolver) CreateTaskListing(ctx context.Context, input model.CreateTaskListingInput) (*model.TaskListing, error) {
	return controller.CreateTaskListing(input), nil
}

// Tasks это разрешитель для получения всех тасков
func (r *queryResolver) Tasks(ctx context.Context) ([]*model.TaskListing, error) {
	return controller.GetAllTasks(), nil
}

// Task это разрешитель для получения таска
func (r *queryResolver) Task(ctx context.Context, id string) (*model.TaskListing, error) {
	return controller.GetTaskListing(id), nil
}

// Mutation возвращает реализацию MutationResolver
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query возврашает реализацию QueryResolver
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
